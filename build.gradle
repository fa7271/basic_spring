plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.encore'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

repositories {
//	의존성(라이브러리) 을 가져오는 대상 (repository)저장소
//	내부망에 구축되어 있는 프로젝트의 경우 NExus와 같은 라이브러리를사용하여 내부망 Repository사용
//maven { url "http://nexus.XXXXX.com:8081/nexus/content/groups/public/" } 에서 가져온다.
	mavenCentral()
}
//starter 종속성은 별도의 버전관리 필요없음
dependencies {
//	타임리프 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//	스프링 mvc(model, view, controller) 구조의 web서비스 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.projectlombok:lombok:1.18.22'

//  테스트를 위한 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

//  Db연결을 위한 의존성 : jdbc, mariadb cliend 셋팅
//	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.mariadb.jdbc:mariadb-java-client'

//	Getter, Setter, Log 관련 의존
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

//	spring data jpa 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

//	mybtis 관련 의존성 추가
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'

//	jsp를 위한 라이브러리 추
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

//  jstl문법 사용시 아래 의존성 추가
//	implementation 'javax.servlet:jstl'

//	swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
}

tasks.named('test') {
//	테스트 라이브러리로 주로 JUnit을 사용
	useJUnitPlatform()
}
//
///opt/homebrew/Cellar/openjdk@11/11.0.21